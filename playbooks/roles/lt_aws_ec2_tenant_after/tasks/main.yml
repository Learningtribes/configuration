---
- name: download inventory repo
  git: 
    repo: "{{inventory_git_url}}"
    dest: "{{inventory_repo_folder}}"
    version: "{{inventory_repo_branch}}"
- name: create tenant configuration folder 
  file:
    path: "{{inventory_repo_folder}}/configuration_files/{{client_name}}_tenant"
    state: directory
    mode: 0755
- name: install pip pyOpenSSL
  pip:
    name: pyOpenSSL
  become: yes
- name: create saml key
  openssl_privatekey:
    path: /tmp/saml.key
- name: create saml csr
  openssl_csr:
    path: /tmp/saml.csr
    privatekey_path: /tmp/saml.key
    country_name: FR
    organization_name: Learningtribes
    common_name: ''
    email_address: support@learningtribes.com
- name: create saml crt
  openssl_certificate:
    path: /tmp/saml.crt
    privatekey_path: /tmp/saml.key
    csr_path: /tmp/saml.csr
    provider: selfsigned
- name: get key content
  shell: "cat /tmp/saml.key  | grep -v 'PRIVATE KEY'"
  register: keyfile
- name: get crt content
  shell: "cat /tmp/saml.crt  | grep -v CERTIFICATE"
  register: crtfile 
- name: add saml key
  lineinfile:
    path: /edx/app/edxapp/lms.auth.json
    regexp: '"SOCIAL_AUTH_SAML_SP_PRIVATE_KEY"'
    line: '    "SOCIAL_AUTH_SAML_SP_PRIVATE_KEY": "{{keyfile["stdout_lines"]|join("\n")}}",'
- name: add saml crt
  lineinfile:
    path: /edx/app/edxapp/lms.auth.json
    regexp: '"SOCIAL_AUTH_SAML_SP_PUBLIC_CERT"'
    line: '    "SOCIAL_AUTH_SAML_SP_PUBLIC_CERT": "{{crtfile["stdout_lines"]|join("\n")}}",'
- name: get tenant configuration files
  command: cp {{item.file_src}} {{item.file_dest}}
  with_items:
    - { file_src: "/etc/nginx/sites-enabled/lms", file_dest: "{{inventory_repo_folder}}/configuration_files/{{client_name}}_tenant/lms" }
    - { file_src: "/etc/nginx/sites-enabled/cms", file_dest: "{{inventory_repo_folder}}/configuration_files/{{client_name}}_tenant/cms" }
    - { file_src: "/edx/app/edxapp/lms.env.json", file_dest: "{{inventory_repo_folder}}/configuration_files/{{client_name}}_tenant/lms.env.json" }
    - { file_src: "/edx/app/edxapp/cms.env.json", file_dest: "{{inventory_repo_folder}}/configuration_files/{{client_name}}_tenant/cms.env.json" }
    - { file_src: "/edx/app/edxapp/lms.auth.json", file_dest: "{{inventory_repo_folder}}/configuration_files/{{client_name}}_tenant/lms.auth.json" }
    - { file_src: "/edx/app/edxapp/cms.auth.json", file_dest: "{{inventory_repo_folder}}/configuration_files/{{client_name}}_tenant/cms.auth.json" }
    - { file_src: "/edx/app/supervisor/conf.available.d/workers.conf", file_dest: "{{inventory_repo_folder}}/configuration_files/{{client_name}}_tenant/workers.conf"}
- name: git push code
  shell: "git add -A; git commit -m 'add {{client_name}} tenant configuration files'; git push"
  args:
    chdir: "{{inventory_repo_folder}}"
- name: remove inventory repo folder
  file:
    path: "{{inventory_repo_folder}}"
    state: absent
- name: remove saml key
  file:
    path: /tmp/saml.key
    state: absent
- name: remove saml csr
  file:
    path: /tmp/saml.csr
    state: absent
- name: remove saml crt
  file:
    path: /tmp/saml.crt
    state: absent
- name: run reindex_course task
  shell: "yes | /edx/app/edxapp/venvs/edxapp/bin/python manage.py cms reindex_course --all --reconfig --settings=aws"
  args:
    chdir: "/edx/app/edxapp/edx-platform"  
  become_user: edxapp