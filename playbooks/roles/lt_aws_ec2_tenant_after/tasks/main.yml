---
- name: download inventory repo
  git: 
    repo: "{{inventory_git_url}}"
    dest: "{{inventory_repo_folder}}"
    version: "{{inventory_repo_branch}}"
- name: create tenant configuration folder 
  file:
    path: "{{inventory_repo_folder}}/configuration_files/{{client_name}}_tenant"
    state: directory
    mode: 0755
- name: install pip pyOpenSSL
  pip:
    name: pyOpenSSL
  become: yes
- name: create saml key
  openssl_privatekey:
    path: /tmp/saml.key
- name: create saml csr
  openssl_csr:
    path: /tmp/saml.csr
    privatekey_path: /tmp/saml.key
    country_name: FR
    organization_name: Learningtribes
    common_name: ''
    email_address: support@learningtribes.com
- name: create saml crt
  openssl_certificate:
    path: /tmp/saml.crt
    privatekey_path: /tmp/saml.key
    csr_path: /tmp/saml.csr
    provider: selfsigned
- name: get key content
  shell: "cat /tmp/saml.key  | grep -v 'PRIVATE KEY'"
  register: keyfile
- name: get crt content
  shell: "cat /tmp/saml.crt  | grep -v CERTIFICATE"
  register: crtfile 
- name: add saml key
  lineinfile:
    path: /edx/app/edxapp/lms.auth.json
    regexp: '"SOCIAL_AUTH_SAML_SP_PRIVATE_KEY"'
    line: '    "SOCIAL_AUTH_SAML_SP_PRIVATE_KEY": "{{keyfile["stdout_lines"]|join("\n")}}",'
- name: add saml crt
  lineinfile:
    path: /edx/app/edxapp/lms.auth.json
    regexp: '"SOCIAL_AUTH_SAML_SP_PUBLIC_CERT"'
    line: '    "SOCIAL_AUTH_SAML_SP_PUBLIC_CERT": "{{crtfile["stdout_lines"]|join("\n")}}",'
- name: get tenant configuration files
  command: cp {{item.file_src}} {{item.file_dest}}
  with_items:
    - { file_src: "/etc/nginx/sites-enabled/lms", file_dest: "{{inventory_repo_folder}}/configuration_files/{{client_name}}_tenant/lms" }
    - { file_src: "/etc/nginx/sites-enabled/cms", file_dest: "{{inventory_repo_folder}}/configuration_files/{{client_name}}_tenant/cms" }
    - { file_src: "/edx/app/edxapp/lms.env.json", file_dest: "{{inventory_repo_folder}}/configuration_files/{{client_name}}_tenant/lms.env.json" }
    - { file_src: "/edx/app/edxapp/cms.env.json", file_dest: "{{inventory_repo_folder}}/configuration_files/{{client_name}}_tenant/cms.env.json" }
    - { file_src: "/edx/app/edxapp/lms.auth.json", file_dest: "{{inventory_repo_folder}}/configuration_files/{{client_name}}_tenant/lms.auth.json" }
    - { file_src: "/edx/app/edxapp/cms.auth.json", file_dest: "{{inventory_repo_folder}}/configuration_files/{{client_name}}_tenant/cms.auth.json" }
    - { file_src: "/edx/app/supervisor/conf.available.d/workers.conf", file_dest: "{{inventory_repo_folder}}/configuration_files/{{client_name}}_tenant/workers.conf" }
- name: git push code
  shell: "git add -A; git commit -m 'add {{client_name}} tenant configuration files'; git push"
  args:
    chdir: "{{inventory_repo_folder}}"
- name: remove inventory repo folder
  file:
    path: "{{inventory_repo_folder}}"
    state: absent
- name: remove saml key
  file:
    path: /tmp/saml.key
    state: absent
- name: remove saml csr
  file:
    path: /tmp/saml.csr
    state: absent
- name: remove saml crt
  file:
    path: /tmp/saml.crt
    state: absent
- name: run reindex_course task
  shell: "yes | /edx/app/edxapp/venvs/edxapp/bin/python manage.py cms reindex_course --all --reconfig --settings=aws"
  args:
    chdir: "/edx/app/edxapp/edx-platform"  
  become_user: edxapp
- name: install ec2 instance connect package
  apt:
    name: ec2-instance-connect
  become: yes
# upgrade openssl version to 3.0.11
- name: check openssl-3.0.1 folder
  stat:
    path: /usr/local/ssl-3.0.11
  register: openssl_folder_statue
- name: failed if folder exist
  fail:
    msg: folder openssl-3.0.11 exists
  when: openssl_folder_statue.stat.exists and openssl_folder_statue.stat.isdir
- name: create openssl-3.0.1 folder
  file:
    state: directory
    path: /usr/local/ssl-3.0.11
- name: download openssl-3.0.1 source code
  get_url:
    url: https://www.openssl.org/source/openssl-3.0.11.tar.gz
    dest: /root/openssl-3.0.11.tar.gz
- name: unarchive openssl file
  unarchive:
    src: /root/openssl-3.0.11.tar.gz
    dest: /root
    remote_src: yes
- name: install openssl-3.0.11
  block:
    - name: compile openssl-3.0.11
      shell: ./config --prefix=/usr/local/ssl-3.0.11 --openssldir=/usr/local/ssl-3.0.11 shared zlib
      args:
        chdir: /root/openssl-3.0.11
    - name: make openssl-3.0.11
      shell: make
      args:
        chdir: /root/openssl-3.0.11
    - name: make install openssl-3.0.11
      shell: make install
      args:
        chdir: /root/openssl-3.0.11
- name: define openssl-3.0.11 library path
  lineinfile:
    path: /etc/ld.so.conf.d/openssl-3.0.11.conf
    line: /usr/local/ssl-3.0.11/lib64
    create: yes
- name: add openssl-3.0.11 library
  shell: ldconfig -v
# upgrade openssh version to 9.7
- name: check openssh9.7 folder
  stat:
    path: /opt/openssh9.7
  register: openssh_folder_statue
- name: failed if folder exist
  fail:
    msg: folder openssh9.7 exists
  when: openssh_folder_statue.stat.exists and openssh_folder_statue.stat.isdir
- name: create openssh9.7 folder
  file:
    state: directory
    path: /opt/openssh9.7
- name: download openssh9.7 source code
  get_url:
    url: https://ftp.usa.openbsd.org/pub/OpenBSD/OpenSSH/portable/openssh-9.7p1.tar.gz
    dest: /root/openssh-9.7p1.tar.gz
- name: unarchive openssl file
  unarchive:
    src: /root/openssh-9.7p1.tar.gz
    dest: /root
    remote_src: yes
- name: install openssh9.7
  block:
    - name: install pam devel package
      apt:
        name: libpam0g-dev
    - name: compile openssh9.7
      shell: ./configure --prefix=/opt/openssh9.7 --with-ssl-dir=/usr/local/ssl-3.0.11 --with-pam
      args:
        chdir: /root/openssh-9.7p1
    - name: make openssh9.7
      shell: make
      args:
        chdir: /root/openssh-9.7p1
    - name: make install openssh9.7
      shell: make install
      args:
        chdir: /root/openssh-9.7p1
- name: test openssh configuration file
  shell: /opt/openssh9.7/sbin/sshd -t -f /etc/ssh/sshd_config
  register: test_openssh_config
  failed_when: test_openssh_config.rc > 0
- name: update openssh systemd file
  replace:
    path: /lib/systemd/system/ssh.service.d/ec2-instance-connect.conf
    regexp: '/usr/sbin/sshd'
    replace: '/opt/openssh9.7/sbin/sshd -f /etc/ssh/sshd_config'
- name: restart openssh service
  systemd:
    state: restarted
    daemon_reload: yes
    name: ssh
  ignore_errors: true